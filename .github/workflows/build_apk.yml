name: Build APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug directory structure
      run: ls -la
      continue-on-error: true

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.5'
        channel: 'stable'
        cache: false

    - name: Create local.properties
      run: |
        echo "flutter.sdk=$FLUTTER_ROOT" > android/local.properties
        echo "sdk.dir=/usr/local/lib/android/sdk" >> android/local.properties
      continue-on-error: true

    - name: Grant execute permission for gradlew
      run: |
        cd android
        chmod +x gradlew
      continue-on-error: true

    - name: Ensure Gradle Wrapper JAR exists
      run: |
        cd android
        mkdir -p gradle/wrapper
        if [ ! -f gradle/wrapper/gradle-wrapper.jar ]; then
          echo "gradle-wrapper.jar missing, downloading..."
          curl -L https://services.gradle.org/distributions/gradle-8.2-bin.zip -o gradle/wrapper/gradle-8.2-bin.zip
          unzip -j gradle/wrapper/gradle-8.2-bin.zip gradle-8.2/lib/gradle-wrapper.jar -d gradle/wrapper/
          rm gradle/wrapper/gradle-8.2-bin.zip
        fi
      continue-on-error: true

    - name: Update gradle-wrapper.properties
      run: |
        cd android
        echo "distributionBase=GRADLE_USER_HOME" > gradle/wrapper/gradle-wrapper.properties
        echo "distributionPath=wrapper/dists" >> gradle/wrapper/gradle-wrapper.properties
        echo "zipStoreBase=GRADLE_USER_HOME" >> gradle/wrapper/gradle-wrapper.properties
        echo "zipStorePath=wrapper/dists" >> gradle/wrapper/gradle-wrapper.properties
        echo "distributionUrl=https\\://services.gradle.org/distributions/gradle-8.2-bin.zip" >> gradle/wrapper/gradle-wrapper.properties
      continue-on-error: true

    - name: Update build.gradle
      run: |
        cd android/app
        cat > build.gradle << 'EOF'
        apply plugin: 'com.android.application'
        apply plugin: 'kotlin-android'
        apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

        android {
            compileSdk 34
            defaultConfig {
                applicationId "com.example.your_app" # اپنا اصل applicationId یہاں ڈالیں
                minSdk 21
                targetSdk 34
                versionCode 1
                versionName "1.0"
            }
            buildTypes {
                release {
                    signingConfig signingConfigs.debug
                }
            }
        }

        dependencies {
            implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.0"
        }

        flutter {
            source '../..'
        }
        EOF
      continue-on-error: true

    - name: Update settings.gradle
      run: |
        cd android
        cat > settings.gradle << 'EOF'
        include ':app'
        def flutterSdkPath = getFlutterSdkPath()
        apply from: "$flutterSdkPath/packages/flutter_tools/gradle/app_plugin_loader.gradle"

        def getFlutterSdkPath() {
            def properties = new Properties()
            file("local.properties").withInputStream { stream ->
                properties.load(stream)
            }
            return properties.getProperty("flutter.sdk")
        }
        EOF
      continue-on-error: true

    - name: Check pubspec.yaml
      run: cat pubspec.yaml
      continue-on-error: true

    - name: Run Flutter doctor
      run: flutter doctor -v
      continue-on-error: true

    - name: Clean project
      run: flutter clean
      continue-on-error: true

    - name: Install dependencies
      run: flutter pub get
      continue-on-error: true

    - name: Debug Flutter build
      run: flutter build apk --release --no-tree-shake-icons --verbose
      continue-on-error: true

    - name: Debug APK output
      run: ls -la build/app/outputs/flutter-apk/ || echo "No APK directory found"
      continue-on-error: true

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release.apk
        path: build/app/outputs/flutter-apk/app-release.apk
      if: success()
