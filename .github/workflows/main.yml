name: Android Permission Check & Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  permission-check:
    name: 🔍 Android Permission & Build Log
    runs-on: ubuntu-latest

    permissions:
      contents: read
      metadata: read
      packages: read

    steps:
      # ✅ Step 1: Checkout Repository
      - name: 🧩 Checkout Repository
        uses: actions/checkout@v4

      # ✅ Step 2: Setup Java (Fixed)
      - name: ☕ Setup Java Environment
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'   # ✅ FIXED missing key
          java-version: '17'        # ✅ Compatible JDK for Flutter/Gradle

      # ✅ Step 3: Setup Flutter
      - name: 🐦 Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'

      # ✅ Step 4: Get Flutter Dependencies
      - name: 📦 Get Dependencies
        run: flutter pub get

      # ✅ Step 5: Analyze Android Permissions
      - name: 🧠 Analyze Android Permissions
        run: |
          echo "🔍 Checking Android permissions..."
          mkdir -p build
          grep "<uses-permission" android/app/src/main/AndroidManifest.xml > build/build.log || echo "⚠️ No permissions found in AndroidManifest.xml" > build/build.log
          cat build/build.log

      # ✅ Step 6: Verify Gradle Wrapper (Optional but Safe)
      - name: 🧰 Verify Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      # ✅ Step 7: Upload Permission Report (Artifact)
      - name: 📤 Upload Build Log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-permission-build-log
          path: build/build.log

      # ✅ Step 8: Optional - Flutter Analyze
      - name: 🧩 Flutter Analyze
        run: flutter analyze || true

      # ✅ Step 9: Optional - Build APK
      - name: 🏗️ Build APK
        run: flutter build apk --release

      # ✅ Step 10: Upload APK as Artifact
      - name: 📦 Upload Built APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: AladdinAI-App-APK
          path: build/app/outputs/flutter-apk/app-release.apk
